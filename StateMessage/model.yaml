StateMessage:
  description: 'State message'
  properties:
    accuracy:
      additionalProperties: false
      description: 'Position accuracy of the robot.'
      properties:
        covariance:
          description: 'Property. Error covariance matrix of estimated position'
          items:
            type: number
          type: array
      type: object
      x-ngsi:
        type: Property
    battery:
      additionalProperties: false
      description: 'The states of the battery the robot mounted.'
      oneOf:
        - required:
            - voltage
        - required:
            - remainingTime
        - required:
            - remainingPercentage
      properties:
        current:
          description: 'Property. Current of the mobile element. Units:''Ampere''. Model: ''https:/schema.org/Number'''
          type: number
        remainingPercentage:
          description: 'Property. Remaining battery charge'
          maximum: 100
          minimum: 0
          type: number
        remainingTime:
          description: 'Property. Expected lifespan of a battery. Model: ''https:/schema.org/DateTime'''
          format: time
          type: string
        voltage:
          description: 'Property. Voltage of the mobile element. Units:''Volt''. Model: ''https:/schema.org/Number'''
          type: number
      type: object
      x-ngsi:
        type: Property
    commandTime:
      description: 'Sent time to the robot'
      format: date-time
      type: string
      x-ngsi:
        type: Property
    destination:
      additionalProperties: false
      description: 'Current destination of the robot. Basically, it is the same as one of the waypoints'
      maxProperties: 3
      properties:
        geographicPoint:
          additionalProperties: true
          description: 'Property. Point in geographic coordinates'
          properties: &statemessage_-_properties_-_pose_-_properties_-_geographicpoint_-_properties
            altitude:
              default: 0.0
              description: 'Property. Simple coordinate of a point'
              type: number
            latitude:
              allOf:
                - default: 0.0
                  description: 'Property. Simple coordinate of a point'
                  type: number
                - maximum: 90
                  minimum: -90
            longitude:
              allOf:
                - default: 0.0
                  description: 'Property. Simple coordinate of a point'
                  type: number
                - maximum: 180
                  minimum: -180
          required: &statemessage_-_properties_-_pose_-_properties_-_geographicpoint_-_required
            - latitude
            - longitude
            - altitude
          type: object
        mapId:
          description: 'Property. Map ID'
          type: string
        orientation2D:
          additionalProperties: true
          description: 'Property. 2D Angle of an element'
          properties: &statemessage_-_properties_-_pose_-_properties_-_orientation2d_-_properties
            theta:
              default: 0.0
              description: 'Property. Simple measurement of an angle'
              type: number
          required: &statemessage_-_properties_-_pose_-_properties_-_orientation2d_-_required
            - theta
          type: object
        orientation3D:
          additionalProperties: true
          description: 'Property. 3D Angles of an element'
          properties: &statemessage_-_properties_-_pose_-_properties_-_orientation3d_-_properties
            pitch:
              default: 0.0
              description: 'Property. Simple measurement of an angle'
              type: number
            roll:
              default: 0.0
              description: 'Property. Simple measurement of an angle'
              type: number
            yaw:
              default: 0.0
              description: 'Property. Simple measurement of an angle'
              type: number
          required: &statemessage_-_properties_-_pose_-_properties_-_orientation3d_-_required
            - roll
            - pitch
            - yaw
          type: object
        point2D:
          additionalProperties: true
          description: 'Property. Point in 2D as a two simple coordinates x and y'
          properties: &statemessage_-_properties_-_pose_-_properties_-_point2d_-_properties
            x:
              default: 0.0
              description: 'Property. Simple coordinate of a point'
              type: number
            y:
              default: 0.0
              description: 'Property. Simple coordinate of a point'
              type: number
          required: &statemessage_-_properties_-_pose_-_properties_-_point2d_-_required
            - x
            - y
          type: object
        point3D:
          additionalProperties: true
          description: 'Property. Point in 3D as a three simple coordinates x, y and z'
          properties: &statemessage_-_properties_-_pose_-_properties_-_point3d_-_properties
            x:
              default: 0.0
              description: 'Property. Simple coordinate of a point'
              type: number
            y:
              default: 0.0
              description: 'Property. Simple coordinate of a point'
              type: number
            z:
              default: 0.0
              description: 'Property. Simple coordinate of a point'
              type: number
          required: &statemessage_-_properties_-_pose_-_properties_-_point3d_-_required
            - x
            - y
            - z
          type: object
      type: object
      x-ngsi:
        type: Property
    errors:
      description: 'Describes the errors that occurred in the robot.'
      items:
        type: string
      type: array
      x-ngsi:
        type: Property
    mode:
      description: 'Enum:''error, navi, standby''. Navigational status of the robot.'
      enum:
        - error
        - navi
        - standby
      type: string
      x-ngsi:
        type: Property
    pose:
      additionalProperties: false
      description: 'Current position of the robot.'
      maxProperties: 3
      properties:
        geographicPoint:
          additionalProperties: true
          description: 'Property. Point in geographic coordinates'
          properties: *statemessage_-_properties_-_pose_-_properties_-_geographicpoint_-_properties
          required: *statemessage_-_properties_-_pose_-_properties_-_geographicpoint_-_required
          type: object
        mapId:
          description: 'Property. Map ID'
          type: string
        orientation2D:
          additionalProperties: true
          description: 'Property. 2D Angle of an element'
          properties: *statemessage_-_properties_-_pose_-_properties_-_orientation2d_-_properties
          required: *statemessage_-_properties_-_pose_-_properties_-_orientation2d_-_required
          type: object
        orientation3D:
          additionalProperties: true
          description: 'Property. 3D Angles of an element'
          properties: *statemessage_-_properties_-_pose_-_properties_-_orientation3d_-_properties
          required: *statemessage_-_properties_-_pose_-_properties_-_orientation3d_-_required
          type: object
        point2D:
          additionalProperties: true
          description: 'Property. Point in 2D as a two simple coordinates x and y'
          properties: *statemessage_-_properties_-_pose_-_properties_-_point2d_-_properties
          required: *statemessage_-_properties_-_pose_-_properties_-_point2d_-_required
          type: object
        point3D:
          additionalProperties: true
          description: 'Property. Point in 3D as a three simple coordinates x, y and z'
          properties: *statemessage_-_properties_-_pose_-_properties_-_point3d_-_properties
          required: *statemessage_-_properties_-_pose_-_properties_-_point3d_-_required
          type: object
      type: object
      x-ngsi:
        type: Property
    type:
      description: 'NGSI Entity type. It has to be StateMessage'
      enum:
        - StateMessage
      type: string
      x-ngsi:
        type: Property
  required:
    - accuracy
    - battery
    - commandTime
    - destination
    - errors
    - id
    - mode
    - pose
    - type
  type: object
  x-derived-from: ""
  x-disclaimer: 'Redistribution and use in source and binary forms, with or without modification, are permitted  provided that the license conditions are met. Copyleft (c) 2021 Contributors to Smart Data Models Program'
  x-license-url: https://github.com/smart-data-models/dataModel.AutonomousMobileRobot/blob/master/StateMessage/LICENSE.md
  x-model-schema: https://smart-data-models.github.io/dataModel.AutonomousMobileRobot/StateMessage/schema.json
  x-model-tags: ""
  x-version: 0.0.1
